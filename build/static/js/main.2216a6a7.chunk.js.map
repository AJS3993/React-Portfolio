{"version":3,"sources":["serviceWorker.js","HomePage/HomePage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","DoubleNavigationPage","React","Component","render","className","size","c","expand","left","src","waves","icon","type","placeholder","aria-label","right","to","active","nav","caret","href","App","exact","path","routerProps","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2216a6a7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { MDBBtn,MDBNavbar, MDBNavbarNav, MDBNavItem, MDBIcon, MDBCard, MDBCardTitle, MDBDropdownItem, MDBNavLink, MDBView, MDBMask, MDBContainer, MDBRow, MDBCol, MDBDropdown,MDBDropdownToggle,MDBDropdownMenu,MDBFormInline} from \"mdbreact\";\nimport './HomePage.css';\nclass DoubleNavigationPage extends React.Component {\n  \n\n  render() {\n    \n\n    return (\n      <Router>\n\n        <div className=\"\">\n          \n\n     \n      \n  \n\n\n  <div className='midRow d-flex justify-content-center align-items-center flex-column'>\n\n\n\n \n\n  <MDBRow className='w-100 d-flex'>\n<MDBCol size='1' c></MDBCol>\n<MDBCol size='10'>\n\n<MDBNavbar expand='md'  className='z-depth-0 px-5 white text-nowrap'>\n       <MDBNavbarNav className='m-0 p-0' left>\n         <MDBNavItem className='m-0 p-0'>\n         \n           <img className='lemon p-3 m-0' src='https://i.imgur.com/aLgjcZq.png'/>\n\n         </MDBNavItem>\n\n         <MDBNavItem className='d-flex align-items-end motto m-0 px-0'>\n                    Your main squeeze for roller skates\n         </MDBNavItem>\n\n       </MDBNavbarNav>\n\n<MDBNavbarNav>\n<MDBNavItem className='mx-n5'>\n              <MDBFormInline waves className='w-100 px-5 mr-5 ml-n5'>\n                <div className=\"md-form my-0 w-100 px-0\">\n                <MDBIcon size='lg' icon=\"search\" />\n                  <input className=\"form-control border border-dark topNav  w-100\" type=\"text\" placeholder=\"What are you looking for?\" aria-label=\"Search\" />\n                </div>\n              </MDBFormInline>\n            </MDBNavItem>\n            </MDBNavbarNav>\n           \n            <MDBNavbarNav right>\n           \n           <MDBNavItem>\n           <MDBNavLink className='topNav2' to=\"#!\">\n             <MDBIcon icon=\"user\" />\n           </MDBNavLink>\n           </MDBNavItem>\n           \n           \n            <MDBNavItem>\n              <MDBNavLink className='topNav' to=\"#!\">Sign in</MDBNavLink>\n            </MDBNavItem>\n\n                  \n            <MDBNavItem>\n           <MDBNavLink className='topNav2' to=\"#!\">\n         or\n           </MDBNavLink>\n           </MDBNavItem>\n\n\n            <MDBNavItem >\n              <MDBNavLink className='topNav' to=\"#!\">Register</MDBNavLink>\n            </MDBNavItem>\n\n           \n            <MDBNavItem className='topNav'>\n           <MDBNavLink className='topNav2' to=\"#!\">\n       |\n           </MDBNavLink>\n           </MDBNavItem>\n\n            <MDBNavItem>\n              <MDBNavLink className='topNav' to=\"#!\">\n              <MDBIcon icon=\"shopping-cart\" />(0)\n              </MDBNavLink>\n            </MDBNavItem>\n\n\n</MDBNavbarNav>\n\n       </MDBNavbar>\n\n\n\n\n<MDBCard className='w-100 z-depth-0'>\n  <MDBNavbar expand='md'  className='z-depth-0 bt2 py-0'>\n  <MDBNavItem active>\n              <MDBNavLink to=\"#!\" className='homeBtn'>Home</MDBNavLink>\n            </MDBNavItem>\n\n\n  <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret className='black-text'>\n                  <span className=\"mr-2 dropDown\">Skates</span>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu>\n                  <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\n                 \n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n\n\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret className='black-text'>\n                  <span className=\"mr-2 dropDown\">Wheels</span>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu>\n                  <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\n                 \n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n\n\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret className='black-text'>\n                  <span className=\"mr-2 dropDown\">Hardware</span>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu>\n                  <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\n                 \n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n\n\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret className='black-text'>\n                  <span className=\"mr-2 dropDown\">Protective Gear</span>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu>\n                  <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\n                 \n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n\n\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret className='black-text'>\n                  <span className=\"mr-2 dropDown\">Apparel</span>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu>\n                  <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\n                 \n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n\n\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret className='black-text'>\n                  <span className=\"mr-2 dropDown\">Accessories</span>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu>\n                  <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\n                 \n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n\n\n       </MDBNavbar>\n      \n          <div className='text-white text-center pt-5 px-4'>\n            <div>\n           \n    \n           \n              <img className='w-100' src='https://i.imgur.com/bPPUB3c.png?1'/>\n \n            </div>\n          </div>\n        </MDBCard>\n\n</MDBCol>\n<MDBCol size='1'></MDBCol>\n \n\n\n  \n    \n    </MDBRow>\n\n  </div>\n\n\n\n\n \n \n </div>\n\n</Router>\n    );\n  }\n}\n\nexport default DoubleNavigationPage;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from './HomePage/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n\n\n<Switch>\n<Route \n      exact path={`/`} \n      render={ (routerProps\n      ) => < HomePage/>} />\n              \n              </Switch>\n\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport './index.css';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./App\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </Router>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  // If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}